
package ejercicio27042022;

import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;


public class conexionconformulario extends javax.swing.JFrame {

    Conexion con = new Conexion();
    int respuesta;
    boolean valido = true;
    DefaultTableModel mimodel;
    int fila=-1;
    
    public conexionconformulario() {
        initComponents();
        setSize(800,650);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setTitle("Alumnos Colegio INTECAP");
        
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        
        
    }
    
    public void conectar() {
        try {
            //crear instancia de clase conexion
            
            Connection miConexion=con.conectorDB();
        
            if(miConexion!=null) {
            //System.out.println("Conectando...");
                lblEstadoActual.setText("Conectado");
            } else {
                lblEstadoActual.setText("Error");
            }
        
        } catch (Exception error) {
            System.out.println(error.getMessage());
        }
    }
    
    public void validarletras(){
        if(txtNombre.getText().matches("^[a-zA-Z_ ]*")) {
        }else {
            JOptionPane.showMessageDialog(this, "El valor ingresado en el nombre no es válido");
            txtNombre.setText("");
        }
    }
    
    public void validarnumeros(int valor){
        
        if (valor==1) {
            if(txtCodigo.getText().matches("^[0-9]*")) {
            } else {
                JOptionPane.showMessageDialog(this, "El valor ingresado es inválido, solo pueden ser números");
                txtCodigo.setText("");
            }
        } else if (valor==2) {
            if(txtTelefono.getText().matches("^[0-9]{1,8}")) {
            } else {
                JOptionPane.showMessageDialog(this, "El valor ingresado en el teléfono es inválido");
                txtTelefono.setText("");
            }
        }
    }
    
    public void limpiar() {
        txtCodigo.setText("");
        txtNombre.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtFecha.setDate(null);
        txtFechaHora.setDate(null);
        tblData.clearSelection();
    }
    
    
    
    public void tabla() {
        try {
            Connection miConexion=con.conectorDB();
        
            //crear encabezados
            String Titulo[]={"ID","Nombre","Direccion","Telefono","Fecha Ingreso","Fecha y hora ingreso"};
            String Registro[]=new String[6];
            
            //configurar tabla de BD en tabla del diseño
            mimodel=new DefaultTableModel(null,Titulo);
            String sql="select * from alumno";
            PreparedStatement ps = miConexion.prepareStatement(sql);
            ResultSet miresultadpbasedatos = ps.executeQuery(sql);
            
            while(miresultadpbasedatos.next()){
                Registro[0]=miresultadpbasedatos.getString("id_alumno");
                Registro[1]=miresultadpbasedatos.getString("Nombre");
                Registro[2]=miresultadpbasedatos.getString("Direccion");
                Registro[3]=miresultadpbasedatos.getString("Telefono");
                Registro[4]=miresultadpbasedatos.getString("Fecha_ingreso");
                Registro[5]=miresultadpbasedatos.getString("Fechayhoraingreso");
                mimodel.addRow(Registro);
            }
            
            tblData.setModel(mimodel);
        }
        catch (Exception error){
            System.out.println(error.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlData = new javax.swing.JPanel();
        lblEstado = new javax.swing.JLabel();
        lblEstadoActual = new javax.swing.JLabel();
        btnConectar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        lblFechaHora = new javax.swing.JLabel();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtFechaHora = new com.toedter.calendar.JDateChooser();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(470, 500));
        setResizable(false);

        lblEstado.setText("Estado:");

        btnConectar.setText("Conexion");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        btnConsulta.setText("Consultar Alumno");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar Formulario");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyReleased(evt);
            }
        });

        lblCodigo.setText("CODIGO:");

        lblNombre.setText("NOMBRE DE ALUMNO:");

        lblDireccion.setText("DIRECCION DE ALUMNO:");

        lblTelefono.setText("TELEFONO DE ALUMNO:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblFecha.setText("Fecha:");

        lblFechaHora.setText("Fecha y hora:");

        javax.swing.GroupLayout pnlDataLayout = new javax.swing.GroupLayout(pnlData);
        pnlData.setLayout(pnlDataLayout);
        pnlDataLayout.setHorizontalGroup(
            pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEstadoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConectar)
                .addGap(30, 30, 30))
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombre)
                    .addComponent(lblCodigo)
                    .addComponent(lblDireccion)
                    .addComponent(lblTelefono))
                .addGap(18, 18, 18)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDireccion)
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(btnConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(99, 99, 99))
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(btnGuardar)
                        .addGap(43, 43, 43)
                        .addComponent(btnEditar)
                        .addGap(50, 50, 50)
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDataLayout.createSequentialGroup()
                                .addComponent(lblFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblFechaHora)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEliminar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDataLayout.setVerticalGroup(
            pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConectar)
                    .addComponent(lblEstado)
                    .addComponent(lblEstadoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsulta)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodigo))
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar))
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDireccion))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTelefono)
                                .addComponent(lblFecha))
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaHora))
                        .addGap(18, 18, 18)
                        .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addComponent(txtFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDataKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        conectar();
        tabla();
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // cambiar formato de fecha a YYYY-MM-DD
        SimpleDateFormat nuevoformato= new SimpleDateFormat("YYYY-MM-dd");
        SimpleDateFormat nuevoformato2= new SimpleDateFormat("YYYY-MM-dd HH:mm:ss");
        
        
        
        //Conectar a BD
        Connection miConexion=con.conectorDB();
        String Querysql="insert into alumno(Nombre,Direccion,Telefono,Fecha_ingreso,Fechayhoraingreso) value(?,?,?,?,?)";
        try {
            PreparedStatement ps = miConexion.prepareStatement(Querysql);
            
            if(txtNombre.getText().equals("")||txtDireccion.getText().equals("")||txtTelefono.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese todos los datos antes de continuar");
            } else if(txtFecha.getDate()==null) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese la fecha antes de continuar");
            } else if (txtFechaHora.getDate()==null){
                JOptionPane.showMessageDialog(this, "Por favor, ingrese ambas fechas antes de continuar");
            }else {
                String fecha=nuevoformato.format(txtFecha.getDate());
                String fechahora=nuevoformato2.format(txtFechaHora.getDate());
                int telefono = Integer.parseInt(txtTelefono.getText());
                    
                    //como mandar datos a la BD
                    ps.setString(1, txtNombre.getText());
                    ps.setString(2, txtDireccion.getText());
                    ps.setInt(3, telefono);
                    ps.setString(4, fecha);
                    ps.setString(5, fechahora);
            
                    respuesta=ps.executeUpdate();
            
                    if(respuesta==1) {
                        JOptionPane.showMessageDialog(null, "Alumno añadido");
                        tabla();
                        limpiar();
                    }else {
                        JOptionPane.showMessageDialog(null, "Error al añadir alumno");
                    }
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(conexionconformulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        //click derecho en el txt, event, key, KeyReleased
        validarletras();
    }//GEN-LAST:event_txtNombreKeyReleased

    private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataKeyReleased
        
    }//GEN-LAST:event_tblDataKeyReleased

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        
        fila=tblData.getSelectedRow();
        
        Connection miConexion=con.conectorDB();
        if (txtCodigo.getText().equals("") && fila==-1) {
            javax.swing.JOptionPane.showMessageDialog(this, "No ingresó el código para la búsqueda");
        } else if (tblData.getSelectedRow() != -1){
            
            txtCodigo.setText(tblData.getValueAt(fila, 0).toString());
            int id=Integer.parseInt(txtCodigo.getText());
            try {
                
                String sqlid="select * from alumno where id_alumno="+id;
                PreparedStatement ps = miConexion.prepareStatement(sqlid);
                ResultSet miresultadobasedatos = ps.executeQuery(sqlid);
                
                if (miresultadobasedatos.first()){
                    txtNombre.setText(miresultadobasedatos.getString("Nombre"));
                    txtDireccion.setText(miresultadobasedatos.getString("Direccion"));
                    txtTelefono.setText(miresultadobasedatos.getString("Telefono"));
                    txtFecha.setDate(miresultadobasedatos.getDate("Fecha_ingreso"));
                    txtFechaHora.setDate(miresultadobasedatos.getDate("Fechayhoraingreso"));
                    btnGuardar.setEnabled(false);
                    btnEditar.setEnabled(true);
                    btnEliminar.setEnabled(true);
                    btnConsulta.setEnabled(false);
                } else{
                    JOptionPane.showMessageDialog(this, "No hay estudiante registrado con el cófigo ingresado");
                }
                
            } catch(Exception error) {
                System.out.println(error);
            }
            
        } else {
            int id=Integer.parseInt(txtCodigo.getText()); 
            try {
                String sqlid="select * from alumno where id_alumno="+id;
                PreparedStatement ps = miConexion.prepareStatement(sqlid);
                ResultSet miresultadobasedatos = ps.executeQuery(sqlid);
                
                if (miresultadobasedatos.first()){
                    txtNombre.setText(miresultadobasedatos.getString("Nombre"));
                    txtDireccion.setText(miresultadobasedatos.getString("Direccion"));
                    txtTelefono.setText(miresultadobasedatos.getString("Telefono"));
                    txtFecha.setDate(miresultadobasedatos.getDate("Fecha_ingreso"));
                    txtFechaHora.setDate(miresultadobasedatos.getDate("Fechayhoraingreso"));
                    btnGuardar.setEnabled(false);
                    btnEditar.setEnabled(true);
                    btnEliminar.setEnabled(true);
                    btnConsulta.setEnabled(false);
                } else{
                    JOptionPane.showMessageDialog(this, "No hay estudiante registrado con el cófigo ingresado");
                }
                
            } catch (Exception error) {
                System.out.println(error);
            }
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        validarnumeros(1);
    }//GEN-LAST:event_txtCodigoKeyReleased

    private void txtTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyReleased
        validarnumeros(2);
    }//GEN-LAST:event_txtTelefonoKeyReleased

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        
        
        // cambiar formato de fecha a YYYY-MM-DD
        SimpleDateFormat nuevoformato= new SimpleDateFormat("YYYY-MM-dd");
        SimpleDateFormat nuevoformato2= new SimpleDateFormat("YYYY-MM-dd HH:mm:ss");
        
        Connection miConexion=con.conectorDB();
        if (txtCodigo.getText().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "No ingresó el código para la búsqueda");
        } else {
            int id=Integer.parseInt(txtCodigo.getText()); 
            try {
                String sql="update alumno set Nombre=?,Direccion=?,Telefono=?,Fecha_ingreso=?,Fechayhoraingreso=? where id_alumno="+id;
                PreparedStatement ps = miConexion.prepareStatement(sql);
                
                
                if(txtNombre.getText().equals("")||txtDireccion.getText().equals("")||txtTelefono.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "No puede haber datos en blanco al editar un alumno");
                } else if(txtFecha.getDate()==null) {
                    JOptionPane.showMessageDialog(this, "No puede haber datos en blanco al editar un alumno");
                } else if (txtFechaHora.getDate()==null){
                    JOptionPane.showMessageDialog(this, "No puede haber datos en blanco al editar un alumno");
                }else {
                    String fecha=nuevoformato.format(txtFecha.getDate());
                    String fechahora=nuevoformato2.format(txtFechaHora.getDate());
                    int telefono = Integer.parseInt(txtTelefono.getText());
                    
                    //como mandar datos a la BD
                    ps.setString(1, txtNombre.getText());
                    ps.setString(2, txtDireccion.getText());
                    ps.setInt(3, telefono);
                    ps.setString(4, fecha);
                    ps.setString(5, fechahora);
            
                    respuesta=ps.executeUpdate();
                    
            
                    if(respuesta==1) {
                        JOptionPane.showMessageDialog(null, "Alumno editado exitosamente");
                        tabla();
                        btnEditar.setEnabled(false);
                        btnEliminar.setEnabled(false);
                        btnGuardar.setEnabled(true);
                        btnConsulta.setEnabled(true);
                        limpiar();
                    }else {
                        JOptionPane.showMessageDialog(null, "Error al editar la información del alumno");
                    }
                
                }
                
                
            } catch (Exception error) {
                System.out.println(error);
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(true);
        btnConsulta.setEnabled(true);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Connection miConexion=con.conectorDB();
        if (txtCodigo.getText().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "No ingresó el código para la búsqueda");
        } else {
            int id=Integer.parseInt(txtCodigo.getText()); 
            try {
                String sql="delete from alumno where id_alumno="+id;
                PreparedStatement ps = miConexion.prepareStatement(sql);
                
                
                respuesta=ps.executeUpdate();
                    if(respuesta==1) {
                        JOptionPane.showMessageDialog(null, "Alumno eliminado exitosamente");
                        tabla();
                        btnEditar.setEnabled(false);
                        btnEliminar.setEnabled(false);
                        btnGuardar.setEnabled(true);
                        btnConsulta.setEnabled(true);
                        limpiar();
                    }else {
                        JOptionPane.showMessageDialog(null, "Error al eliminar la información del alumno");
                    }
                
                
            } catch (Exception error) {
                System.out.println(error);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(conexionconformulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(conexionconformulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(conexionconformulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(conexionconformulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new conexionconformulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoActual;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFechaHora;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPanel pnlData;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDireccion;
    private com.toedter.calendar.JDateChooser txtFecha;
    private com.toedter.calendar.JDateChooser txtFechaHora;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
